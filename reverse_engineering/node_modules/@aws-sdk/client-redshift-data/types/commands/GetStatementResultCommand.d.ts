import { RedshiftDataClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../RedshiftDataClient";
import { GetStatementResultRequest, GetStatementResultResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type GetStatementResultCommandInput = GetStatementResultRequest;
export declare type GetStatementResultCommandOutput = GetStatementResultResponse & __MetadataBearer;
/**
 * <p>Fetches the temporarily cached result of an SQL statement.
 *        A token is returned to page through the statement results. </p>
 */
export declare class GetStatementResultCommand extends $Command<GetStatementResultCommandInput, GetStatementResultCommandOutput, RedshiftDataClientResolvedConfig> {
    readonly input: GetStatementResultCommandInput;
    private resolved;
    constructor(input: GetStatementResultCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RedshiftDataClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetStatementResultCommandInput, GetStatementResultCommandOutput>;
    private serialize;
    private deserialize;
}
