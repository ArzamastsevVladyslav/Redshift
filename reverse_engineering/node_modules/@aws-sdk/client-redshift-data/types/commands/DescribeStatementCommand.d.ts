import { RedshiftDataClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../RedshiftDataClient";
import { DescribeStatementRequest, DescribeStatementResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type DescribeStatementCommandInput = DescribeStatementRequest;
export declare type DescribeStatementCommandOutput = DescribeStatementResponse & __MetadataBearer;
/**
 * <p>Describes the details about a specific instance when a query was run by the Amazon Redshift Data API. The information
 *       includes when the query started, when it finished, the query status, the number of rows returned, and the SQL
 *       statement. </p>
 */
export declare class DescribeStatementCommand extends $Command<DescribeStatementCommandInput, DescribeStatementCommandOutput, RedshiftDataClientResolvedConfig> {
    readonly input: DescribeStatementCommandInput;
    private resolved;
    constructor(input: DescribeStatementCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RedshiftDataClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeStatementCommandInput, DescribeStatementCommandOutput>;
    private serialize;
    private deserialize;
}
