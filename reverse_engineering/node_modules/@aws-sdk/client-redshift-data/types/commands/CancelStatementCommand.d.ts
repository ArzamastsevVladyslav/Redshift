import { RedshiftDataClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../RedshiftDataClient";
import { CancelStatementRequest, CancelStatementResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type CancelStatementCommandInput = CancelStatementRequest;
export declare type CancelStatementCommandOutput = CancelStatementResponse & __MetadataBearer;
/**
 * <p>Cancels a running query. To be canceled, a query must be running. </p>
 */
export declare class CancelStatementCommand extends $Command<CancelStatementCommandInput, CancelStatementCommandOutput, RedshiftDataClientResolvedConfig> {
    readonly input: CancelStatementCommandInput;
    private resolved;
    constructor(input: CancelStatementCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RedshiftDataClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CancelStatementCommandInput, CancelStatementCommandOutput>;
    private serialize;
    private deserialize;
}
