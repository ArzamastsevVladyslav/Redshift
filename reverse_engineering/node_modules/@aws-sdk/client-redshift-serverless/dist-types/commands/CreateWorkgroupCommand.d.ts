import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { CreateWorkgroupRequest, CreateWorkgroupResponse } from "../models/models_0";
import { RedshiftServerlessClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../RedshiftServerlessClient";
export interface CreateWorkgroupCommandInput extends CreateWorkgroupRequest {
}
export interface CreateWorkgroupCommandOutput extends CreateWorkgroupResponse, __MetadataBearer {
}
/**
 * <p>Creates an workgroup in Amazon Redshift Serverless.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { RedshiftServerlessClient, CreateWorkgroupCommand } from "@aws-sdk/client-redshift-serverless"; // ES Modules import
 * // const { RedshiftServerlessClient, CreateWorkgroupCommand } = require("@aws-sdk/client-redshift-serverless"); // CommonJS import
 * const client = new RedshiftServerlessClient(config);
 * const command = new CreateWorkgroupCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link CreateWorkgroupCommandInput} for command's `input` shape.
 * @see {@link CreateWorkgroupCommandOutput} for command's `response` shape.
 * @see {@link RedshiftServerlessClientResolvedConfig | config} for RedshiftServerlessClient's `config` shape.
 *
 */
export declare class CreateWorkgroupCommand extends $Command<CreateWorkgroupCommandInput, CreateWorkgroupCommandOutput, RedshiftServerlessClientResolvedConfig> {
    readonly input: CreateWorkgroupCommandInput;
    constructor(input: CreateWorkgroupCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RedshiftServerlessClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateWorkgroupCommandInput, CreateWorkgroupCommandOutput>;
    private serialize;
    private deserialize;
}
