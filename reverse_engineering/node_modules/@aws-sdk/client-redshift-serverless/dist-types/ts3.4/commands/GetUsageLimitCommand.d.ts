import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { GetUsageLimitRequest, GetUsageLimitResponse } from "../models/models_0";
import { RedshiftServerlessClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../RedshiftServerlessClient";
export interface GetUsageLimitCommandInput extends GetUsageLimitRequest {
}
export interface GetUsageLimitCommandOutput extends GetUsageLimitResponse, __MetadataBearer {
}

export declare class GetUsageLimitCommand extends $Command<GetUsageLimitCommandInput, GetUsageLimitCommandOutput, RedshiftServerlessClientResolvedConfig> {
    readonly input: GetUsageLimitCommandInput;
    constructor(input: GetUsageLimitCommandInput);
    
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RedshiftServerlessClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetUsageLimitCommandInput, GetUsageLimitCommandOutput>;
    private serialize;
    private deserialize;
}
