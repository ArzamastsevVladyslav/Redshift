import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
import { RedshiftServerlessServiceException as __BaseException } from "./RedshiftServerlessServiceException";

export declare class AccessDeniedException extends __BaseException {
    readonly name: "AccessDeniedException";
    readonly $fault: "client";
    code?: string;
    
    constructor(opts: __ExceptionOptionType<AccessDeniedException, __BaseException>);
}

export interface ConfigParameter {
    
    parameterKey?: string;
    
    parameterValue?: string;
}

export declare class ConflictException extends __BaseException {
    readonly name: "ConflictException";
    readonly $fault: "client";
    
    constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export interface ConvertRecoveryPointToSnapshotRequest {
    
    recoveryPointId: string | undefined;
    
    snapshotName: string | undefined;
    
    retentionPeriod?: number;
}
export declare enum SnapshotStatus {
    AVAILABLE = "AVAILABLE",
    CANCELLED = "CANCELLED",
    COPYING = "COPYING",
    CREATING = "CREATING",
    DELETED = "DELETED",
    FAILED = "FAILED"
}

export interface Snapshot {
    
    namespaceName?: string;
    
    namespaceArn?: string;
    
    snapshotName?: string;
    
    snapshotCreateTime?: Date;
    
    adminUsername?: string;
    
    status?: SnapshotStatus | string;
    
    kmsKeyId?: string;
    
    ownerAccount?: string;
    
    totalBackupSizeInMegaBytes?: number;
    
    actualIncrementalBackupSizeInMegaBytes?: number;
    
    backupProgressInMegaBytes?: number;
    
    currentBackupRateInMegaBytesPerSecond?: number;
    
    estimatedSecondsToCompletion?: number;
    
    elapsedTimeInSeconds?: number;
    
    snapshotRetentionPeriod?: number;
    
    snapshotRemainingDays?: number;
    
    snapshotRetentionStartTime?: Date;
    
    snapshotArn?: string;
    
    accountsWithRestoreAccess?: string[];
    
    accountsWithProvisionedRestoreAccess?: string[];
}
export interface ConvertRecoveryPointToSnapshotResponse {
    
    snapshot?: Snapshot;
}

export declare class InternalServerException extends __BaseException {
    readonly name: "InternalServerException";
    readonly $fault: "server";
    $retryable: {};
    
    constructor(opts: __ExceptionOptionType<InternalServerException, __BaseException>);
}

export declare class ResourceNotFoundException extends __BaseException {
    readonly name: "ResourceNotFoundException";
    readonly $fault: "client";
    
    resourceName?: string;
    
    constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
}

export declare class ServiceQuotaExceededException extends __BaseException {
    readonly name: "ServiceQuotaExceededException";
    readonly $fault: "client";
    
    constructor(opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>);
}

export declare class ValidationException extends __BaseException {
    readonly name: "ValidationException";
    readonly $fault: "client";
    
    constructor(opts: __ExceptionOptionType<ValidationException, __BaseException>);
}
export interface CreateEndpointAccessRequest {
    
    endpointName: string | undefined;
    
    subnetIds: string[] | undefined;
    
    workgroupName: string | undefined;
    
    vpcSecurityGroupIds?: string[];
}

export interface NetworkInterface {
    
    networkInterfaceId?: string;
    
    subnetId?: string;
    
    privateIpAddress?: string;
    
    availabilityZone?: string;
}

export interface VpcEndpoint {
    
    vpcEndpointId?: string;
    
    vpcId?: string;
    
    networkInterfaces?: NetworkInterface[];
}

export interface VpcSecurityGroupMembership {
    
    vpcSecurityGroupId?: string;
    
    status?: string;
}

export interface EndpointAccess {
    
    endpointName?: string;
    
    endpointStatus?: string;
    
    workgroupName?: string;
    
    endpointCreateTime?: Date;
    
    port?: number;
    
    address?: string;
    
    subnetIds?: string[];
    
    vpcSecurityGroups?: VpcSecurityGroupMembership[];
    
    vpcEndpoint?: VpcEndpoint;
    
    endpointArn?: string;
}
export interface CreateEndpointAccessResponse {
    
    endpoint?: EndpointAccess;
}
export declare enum LogExport {
    CONNECTION_LOG = "connectionlog",
    USER_ACTIVITY_LOG = "useractivitylog",
    USER_LOG = "userlog"
}

export interface Tag {
    
    key: string | undefined;
    
    value: string | undefined;
}
export interface CreateNamespaceRequest {
    
    namespaceName: string | undefined;
    
    adminUsername?: string;
    
    adminUserPassword?: string;
    
    dbName?: string;
    
    kmsKeyId?: string;
    
    defaultIamRoleArn?: string;
    
    iamRoles?: string[];
    
    logExports?: (LogExport | string)[];
    
    tags?: Tag[];
}
export declare enum NamespaceStatus {
    AVAILABLE = "AVAILABLE",
    DELETING = "DELETING",
    MODIFYING = "MODIFYING"
}

export interface Namespace {
    
    namespaceArn?: string;
    
    namespaceId?: string;
    
    namespaceName?: string;
    
    adminUsername?: string;
    
    dbName?: string;
    
    kmsKeyId?: string;
    
    defaultIamRoleArn?: string;
    
    iamRoles?: string[];
    
    logExports?: (LogExport | string)[];
    
    status?: NamespaceStatus | string;
    
    creationDate?: Date;
}
export interface CreateNamespaceResponse {
    
    namespace?: Namespace;
}

export declare class TooManyTagsException extends __BaseException {
    readonly name: "TooManyTagsException";
    readonly $fault: "client";
    
    resourceName?: string;
    
    constructor(opts: __ExceptionOptionType<TooManyTagsException, __BaseException>);
}
export interface CreateSnapshotRequest {
    
    namespaceName: string | undefined;
    
    snapshotName: string | undefined;
    
    retentionPeriod?: number;
}
export interface CreateSnapshotResponse {
    
    snapshot?: Snapshot;
}
export declare enum UsageLimitBreachAction {
    DEACTIVATE = "deactivate",
    EMIT_METRIC = "emit-metric",
    LOG = "log"
}
export declare enum UsageLimitPeriod {
    DAILY = "daily",
    MONTHLY = "monthly",
    WEEKLY = "weekly"
}
export declare enum UsageLimitUsageType {
    CROSS_REGION_DATASHARING = "cross-region-datasharing",
    SERVERLESS_COMPUTE = "serverless-compute"
}
export interface CreateUsageLimitRequest {
    
    resourceArn: string | undefined;
    
    usageType: UsageLimitUsageType | string | undefined;
    
    amount: number | undefined;
    
    period?: UsageLimitPeriod | string;
    
    breachAction?: UsageLimitBreachAction | string;
}

export interface UsageLimit {
    
    usageLimitId?: string;
    
    usageLimitArn?: string;
    
    resourceArn?: string;
    
    usageType?: UsageLimitUsageType | string;
    
    amount?: number;
    
    period?: UsageLimitPeriod | string;
    
    breachAction?: UsageLimitBreachAction | string;
}
export interface CreateUsageLimitResponse {
    
    usageLimit?: UsageLimit;
}
export interface CreateWorkgroupRequest {
    
    workgroupName: string | undefined;
    
    namespaceName: string | undefined;
    
    baseCapacity?: number;
    
    enhancedVpcRouting?: boolean;
    
    configParameters?: ConfigParameter[];
    
    securityGroupIds?: string[];
    
    subnetIds?: string[];
    
    publiclyAccessible?: boolean;
    
    tags?: Tag[];
}

export interface Endpoint {
    
    address?: string;
    
    port?: number;
    
    vpcEndpoints?: VpcEndpoint[];
}
export declare enum WorkgroupStatus {
    AVAILABLE = "AVAILABLE",
    CREATING = "CREATING",
    DELETING = "DELETING",
    MODIFYING = "MODIFYING"
}

export interface Workgroup {
    
    workgroupId?: string;
    
    workgroupArn?: string;
    
    workgroupName?: string;
    
    namespaceName?: string;
    
    baseCapacity?: number;
    
    enhancedVpcRouting?: boolean;
    
    configParameters?: ConfigParameter[];
    
    securityGroupIds?: string[];
    
    subnetIds?: string[];
    
    status?: WorkgroupStatus | string;
    
    endpoint?: Endpoint;
    
    publiclyAccessible?: boolean;
    
    creationDate?: Date;
}
export interface CreateWorkgroupResponse {
    
    workgroup?: Workgroup;
}

export declare class InsufficientCapacityException extends __BaseException {
    readonly name: "InsufficientCapacityException";
    readonly $fault: "client";
    $retryable: {};
    
    constructor(opts: __ExceptionOptionType<InsufficientCapacityException, __BaseException>);
}
export interface DeleteEndpointAccessRequest {
    
    endpointName: string | undefined;
}
export interface DeleteEndpointAccessResponse {
    
    endpoint?: EndpointAccess;
}
export interface GetEndpointAccessRequest {
    
    endpointName: string | undefined;
}
export interface GetEndpointAccessResponse {
    
    endpoint?: EndpointAccess;
}
export interface ListEndpointAccessRequest {
    
    nextToken?: string;
    
    maxResults?: number;
    
    workgroupName?: string;
    
    vpcId?: string;
}
export interface ListEndpointAccessResponse {
    
    nextToken?: string;
    
    endpoints: EndpointAccess[] | undefined;
}
export interface UpdateEndpointAccessRequest {
    
    endpointName: string | undefined;
    
    vpcSecurityGroupIds?: string[];
}
export interface UpdateEndpointAccessResponse {
    
    endpoint?: EndpointAccess;
}
export interface DeleteNamespaceRequest {
    
    namespaceName: string | undefined;
    
    finalSnapshotName?: string;
    
    finalSnapshotRetentionPeriod?: number;
}
export interface DeleteNamespaceResponse {
    
    namespace: Namespace | undefined;
}
export interface DeleteResourcePolicyRequest {
    
    resourceArn: string | undefined;
}
export interface DeleteResourcePolicyResponse {
}
export interface DeleteSnapshotRequest {
    
    snapshotName: string | undefined;
}
export interface DeleteSnapshotResponse {
    
    snapshot?: Snapshot;
}
export interface DeleteUsageLimitRequest {
    
    usageLimitId: string | undefined;
}
export interface DeleteUsageLimitResponse {
    
    usageLimit?: UsageLimit;
}
export interface DeleteWorkgroupRequest {
    
    workgroupName: string | undefined;
}
export interface DeleteWorkgroupResponse {
    
    workgroup: Workgroup | undefined;
}
export interface GetCredentialsRequest {
    
    workgroupName: string | undefined;
    
    dbName?: string;
    
    durationSeconds?: number;
}
export interface GetCredentialsResponse {
    
    dbUser?: string;
    
    dbPassword?: string;
    
    expiration?: Date;
    
    nextRefreshTime?: Date;
}
export interface GetNamespaceRequest {
    
    namespaceName: string | undefined;
}
export interface GetNamespaceResponse {
    
    namespace: Namespace | undefined;
}
export interface GetRecoveryPointRequest {
    
    recoveryPointId: string | undefined;
}

export interface RecoveryPoint {
    
    recoveryPointId?: string;
    
    recoveryPointCreateTime?: Date;
    
    totalSizeInMegaBytes?: number;
    
    namespaceName?: string;
    
    workgroupName?: string;
}
export interface GetRecoveryPointResponse {
    
    recoveryPoint?: RecoveryPoint;
}
export interface GetResourcePolicyRequest {
    
    resourceArn: string | undefined;
}

export interface ResourcePolicy {
    
    resourceArn?: string;
    
    policy?: string;
}
export interface GetResourcePolicyResponse {
    
    resourcePolicy?: ResourcePolicy;
}
export interface GetSnapshotRequest {
    
    snapshotName?: string;
    
    ownerAccount?: string;
    
    snapshotArn?: string;
}
export interface GetSnapshotResponse {
    
    snapshot?: Snapshot;
}
export interface GetUsageLimitRequest {
    
    usageLimitId: string | undefined;
}
export interface GetUsageLimitResponse {
    
    usageLimit?: UsageLimit;
}
export interface GetWorkgroupRequest {
    
    workgroupName: string | undefined;
}
export interface GetWorkgroupResponse {
    
    workgroup: Workgroup | undefined;
}

export declare class InvalidPaginationException extends __BaseException {
    readonly name: "InvalidPaginationException";
    readonly $fault: "client";
    
    constructor(opts: __ExceptionOptionType<InvalidPaginationException, __BaseException>);
}
export interface ListNamespacesRequest {
    
    nextToken?: string;
    
    maxResults?: number;
}
export interface ListNamespacesResponse {
    
    nextToken?: string;
    
    namespaces: Namespace[] | undefined;
}
export interface ListRecoveryPointsRequest {
    
    nextToken?: string;
    
    maxResults?: number;
    
    startTime?: Date;
    
    endTime?: Date;
    
    namespaceName?: string;
}
export interface ListRecoveryPointsResponse {
    
    recoveryPoints?: RecoveryPoint[];
    
    nextToken?: string;
}
export interface ListSnapshotsRequest {
    
    nextToken?: string;
    
    maxResults?: number;
    
    namespaceName?: string;
    
    namespaceArn?: string;
    
    ownerAccount?: string;
    
    startTime?: Date;
    
    endTime?: Date;
}
export interface ListSnapshotsResponse {
    
    nextToken?: string;
    
    snapshots?: Snapshot[];
}
export interface ListTagsForResourceRequest {
    
    resourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
    
    tags?: Tag[];
}

export declare class ThrottlingException extends __BaseException {
    readonly name: "ThrottlingException";
    readonly $fault: "client";
    $retryable: {};
    code?: string;
    
    constructor(opts: __ExceptionOptionType<ThrottlingException, __BaseException>);
}
export interface ListUsageLimitsRequest {
    
    resourceArn?: string;
    
    usageType?: UsageLimitUsageType | string;
    
    nextToken?: string;
    
    maxResults?: number;
}
export interface ListUsageLimitsResponse {
    
    usageLimits?: UsageLimit[];
    
    nextToken?: string;
}
export interface ListWorkgroupsRequest {
    
    nextToken?: string;
    
    maxResults?: number;
}
export interface ListWorkgroupsResponse {
    
    nextToken?: string;
    
    workgroups: Workgroup[] | undefined;
}
export interface UpdateNamespaceRequest {
    
    namespaceName: string | undefined;
    
    adminUserPassword?: string;
    
    adminUsername?: string;
    
    kmsKeyId?: string;
    
    defaultIamRoleArn?: string;
    
    iamRoles?: string[];
    
    logExports?: (LogExport | string)[];
}
export interface UpdateNamespaceResponse {
    
    namespace: Namespace | undefined;
}
export interface PutResourcePolicyRequest {
    
    resourceArn: string | undefined;
    
    policy: string | undefined;
}
export interface PutResourcePolicyResponse {
    
    resourcePolicy?: ResourcePolicy;
}
export interface RestoreFromRecoveryPointRequest {
    
    recoveryPointId: string | undefined;
    
    namespaceName: string | undefined;
    
    workgroupName: string | undefined;
}
export interface RestoreFromRecoveryPointResponse {
    
    recoveryPointId?: string;
    
    namespace?: Namespace;
}
export interface RestoreFromSnapshotRequest {
    
    namespaceName: string | undefined;
    
    workgroupName: string | undefined;
    
    snapshotName?: string;
    
    snapshotArn?: string;
    
    ownerAccount?: string;
}
export interface RestoreFromSnapshotResponse {
    
    snapshotName?: string;
    
    ownerAccount?: string;
    
    namespace?: Namespace;
}
export interface UpdateSnapshotRequest {
    
    snapshotName: string | undefined;
    
    retentionPeriod?: number;
}
export interface UpdateSnapshotResponse {
    
    snapshot?: Snapshot;
}
export interface TagResourceRequest {
    
    resourceArn: string | undefined;
    
    tags: Tag[] | undefined;
}
export interface TagResourceResponse {
}
export interface UntagResourceRequest {
    
    resourceArn: string | undefined;
    
    tagKeys: string[] | undefined;
}
export interface UntagResourceResponse {
}
export interface UpdateUsageLimitRequest {
    
    usageLimitId: string | undefined;
    
    amount?: number;
    
    breachAction?: UsageLimitBreachAction | string;
}
export interface UpdateUsageLimitResponse {
    
    usageLimit?: UsageLimit;
}
export interface UpdateWorkgroupRequest {
    
    workgroupName: string | undefined;
    
    baseCapacity?: number;
    
    enhancedVpcRouting?: boolean;
    
    configParameters?: ConfigParameter[];
    
    publiclyAccessible?: boolean;
    
    subnetIds?: string[];
    
    securityGroupIds?: string[];
}
export interface UpdateWorkgroupResponse {
    
    workgroup: Workgroup | undefined;
}

export declare const ConfigParameterFilterSensitiveLog: (obj: ConfigParameter) => any;

export declare const ConvertRecoveryPointToSnapshotRequestFilterSensitiveLog: (obj: ConvertRecoveryPointToSnapshotRequest) => any;

export declare const SnapshotFilterSensitiveLog: (obj: Snapshot) => any;

export declare const ConvertRecoveryPointToSnapshotResponseFilterSensitiveLog: (obj: ConvertRecoveryPointToSnapshotResponse) => any;

export declare const CreateEndpointAccessRequestFilterSensitiveLog: (obj: CreateEndpointAccessRequest) => any;

export declare const NetworkInterfaceFilterSensitiveLog: (obj: NetworkInterface) => any;

export declare const VpcEndpointFilterSensitiveLog: (obj: VpcEndpoint) => any;

export declare const VpcSecurityGroupMembershipFilterSensitiveLog: (obj: VpcSecurityGroupMembership) => any;

export declare const EndpointAccessFilterSensitiveLog: (obj: EndpointAccess) => any;

export declare const CreateEndpointAccessResponseFilterSensitiveLog: (obj: CreateEndpointAccessResponse) => any;

export declare const TagFilterSensitiveLog: (obj: Tag) => any;

export declare const CreateNamespaceRequestFilterSensitiveLog: (obj: CreateNamespaceRequest) => any;

export declare const NamespaceFilterSensitiveLog: (obj: Namespace) => any;

export declare const CreateNamespaceResponseFilterSensitiveLog: (obj: CreateNamespaceResponse) => any;

export declare const CreateSnapshotRequestFilterSensitiveLog: (obj: CreateSnapshotRequest) => any;

export declare const CreateSnapshotResponseFilterSensitiveLog: (obj: CreateSnapshotResponse) => any;

export declare const CreateUsageLimitRequestFilterSensitiveLog: (obj: CreateUsageLimitRequest) => any;

export declare const UsageLimitFilterSensitiveLog: (obj: UsageLimit) => any;

export declare const CreateUsageLimitResponseFilterSensitiveLog: (obj: CreateUsageLimitResponse) => any;

export declare const CreateWorkgroupRequestFilterSensitiveLog: (obj: CreateWorkgroupRequest) => any;

export declare const EndpointFilterSensitiveLog: (obj: Endpoint) => any;

export declare const WorkgroupFilterSensitiveLog: (obj: Workgroup) => any;

export declare const CreateWorkgroupResponseFilterSensitiveLog: (obj: CreateWorkgroupResponse) => any;

export declare const DeleteEndpointAccessRequestFilterSensitiveLog: (obj: DeleteEndpointAccessRequest) => any;

export declare const DeleteEndpointAccessResponseFilterSensitiveLog: (obj: DeleteEndpointAccessResponse) => any;

export declare const GetEndpointAccessRequestFilterSensitiveLog: (obj: GetEndpointAccessRequest) => any;

export declare const GetEndpointAccessResponseFilterSensitiveLog: (obj: GetEndpointAccessResponse) => any;

export declare const ListEndpointAccessRequestFilterSensitiveLog: (obj: ListEndpointAccessRequest) => any;

export declare const ListEndpointAccessResponseFilterSensitiveLog: (obj: ListEndpointAccessResponse) => any;

export declare const UpdateEndpointAccessRequestFilterSensitiveLog: (obj: UpdateEndpointAccessRequest) => any;

export declare const UpdateEndpointAccessResponseFilterSensitiveLog: (obj: UpdateEndpointAccessResponse) => any;

export declare const DeleteNamespaceRequestFilterSensitiveLog: (obj: DeleteNamespaceRequest) => any;

export declare const DeleteNamespaceResponseFilterSensitiveLog: (obj: DeleteNamespaceResponse) => any;

export declare const DeleteResourcePolicyRequestFilterSensitiveLog: (obj: DeleteResourcePolicyRequest) => any;

export declare const DeleteResourcePolicyResponseFilterSensitiveLog: (obj: DeleteResourcePolicyResponse) => any;

export declare const DeleteSnapshotRequestFilterSensitiveLog: (obj: DeleteSnapshotRequest) => any;

export declare const DeleteSnapshotResponseFilterSensitiveLog: (obj: DeleteSnapshotResponse) => any;

export declare const DeleteUsageLimitRequestFilterSensitiveLog: (obj: DeleteUsageLimitRequest) => any;

export declare const DeleteUsageLimitResponseFilterSensitiveLog: (obj: DeleteUsageLimitResponse) => any;

export declare const DeleteWorkgroupRequestFilterSensitiveLog: (obj: DeleteWorkgroupRequest) => any;

export declare const DeleteWorkgroupResponseFilterSensitiveLog: (obj: DeleteWorkgroupResponse) => any;

export declare const GetCredentialsRequestFilterSensitiveLog: (obj: GetCredentialsRequest) => any;

export declare const GetCredentialsResponseFilterSensitiveLog: (obj: GetCredentialsResponse) => any;

export declare const GetNamespaceRequestFilterSensitiveLog: (obj: GetNamespaceRequest) => any;

export declare const GetNamespaceResponseFilterSensitiveLog: (obj: GetNamespaceResponse) => any;

export declare const GetRecoveryPointRequestFilterSensitiveLog: (obj: GetRecoveryPointRequest) => any;

export declare const RecoveryPointFilterSensitiveLog: (obj: RecoveryPoint) => any;

export declare const GetRecoveryPointResponseFilterSensitiveLog: (obj: GetRecoveryPointResponse) => any;

export declare const GetResourcePolicyRequestFilterSensitiveLog: (obj: GetResourcePolicyRequest) => any;

export declare const ResourcePolicyFilterSensitiveLog: (obj: ResourcePolicy) => any;

export declare const GetResourcePolicyResponseFilterSensitiveLog: (obj: GetResourcePolicyResponse) => any;

export declare const GetSnapshotRequestFilterSensitiveLog: (obj: GetSnapshotRequest) => any;

export declare const GetSnapshotResponseFilterSensitiveLog: (obj: GetSnapshotResponse) => any;

export declare const GetUsageLimitRequestFilterSensitiveLog: (obj: GetUsageLimitRequest) => any;

export declare const GetUsageLimitResponseFilterSensitiveLog: (obj: GetUsageLimitResponse) => any;

export declare const GetWorkgroupRequestFilterSensitiveLog: (obj: GetWorkgroupRequest) => any;

export declare const GetWorkgroupResponseFilterSensitiveLog: (obj: GetWorkgroupResponse) => any;

export declare const ListNamespacesRequestFilterSensitiveLog: (obj: ListNamespacesRequest) => any;

export declare const ListNamespacesResponseFilterSensitiveLog: (obj: ListNamespacesResponse) => any;

export declare const ListRecoveryPointsRequestFilterSensitiveLog: (obj: ListRecoveryPointsRequest) => any;

export declare const ListRecoveryPointsResponseFilterSensitiveLog: (obj: ListRecoveryPointsResponse) => any;

export declare const ListSnapshotsRequestFilterSensitiveLog: (obj: ListSnapshotsRequest) => any;

export declare const ListSnapshotsResponseFilterSensitiveLog: (obj: ListSnapshotsResponse) => any;

export declare const ListTagsForResourceRequestFilterSensitiveLog: (obj: ListTagsForResourceRequest) => any;

export declare const ListTagsForResourceResponseFilterSensitiveLog: (obj: ListTagsForResourceResponse) => any;

export declare const ListUsageLimitsRequestFilterSensitiveLog: (obj: ListUsageLimitsRequest) => any;

export declare const ListUsageLimitsResponseFilterSensitiveLog: (obj: ListUsageLimitsResponse) => any;

export declare const ListWorkgroupsRequestFilterSensitiveLog: (obj: ListWorkgroupsRequest) => any;

export declare const ListWorkgroupsResponseFilterSensitiveLog: (obj: ListWorkgroupsResponse) => any;

export declare const UpdateNamespaceRequestFilterSensitiveLog: (obj: UpdateNamespaceRequest) => any;

export declare const UpdateNamespaceResponseFilterSensitiveLog: (obj: UpdateNamespaceResponse) => any;

export declare const PutResourcePolicyRequestFilterSensitiveLog: (obj: PutResourcePolicyRequest) => any;

export declare const PutResourcePolicyResponseFilterSensitiveLog: (obj: PutResourcePolicyResponse) => any;

export declare const RestoreFromRecoveryPointRequestFilterSensitiveLog: (obj: RestoreFromRecoveryPointRequest) => any;

export declare const RestoreFromRecoveryPointResponseFilterSensitiveLog: (obj: RestoreFromRecoveryPointResponse) => any;

export declare const RestoreFromSnapshotRequestFilterSensitiveLog: (obj: RestoreFromSnapshotRequest) => any;

export declare const RestoreFromSnapshotResponseFilterSensitiveLog: (obj: RestoreFromSnapshotResponse) => any;

export declare const UpdateSnapshotRequestFilterSensitiveLog: (obj: UpdateSnapshotRequest) => any;

export declare const UpdateSnapshotResponseFilterSensitiveLog: (obj: UpdateSnapshotResponse) => any;

export declare const TagResourceRequestFilterSensitiveLog: (obj: TagResourceRequest) => any;

export declare const TagResourceResponseFilterSensitiveLog: (obj: TagResourceResponse) => any;

export declare const UntagResourceRequestFilterSensitiveLog: (obj: UntagResourceRequest) => any;

export declare const UntagResourceResponseFilterSensitiveLog: (obj: UntagResourceResponse) => any;

export declare const UpdateUsageLimitRequestFilterSensitiveLog: (obj: UpdateUsageLimitRequest) => any;

export declare const UpdateUsageLimitResponseFilterSensitiveLog: (obj: UpdateUsageLimitResponse) => any;

export declare const UpdateWorkgroupRequestFilterSensitiveLog: (obj: UpdateWorkgroupRequest) => any;

export declare const UpdateWorkgroupResponseFilterSensitiveLog: (obj: UpdateWorkgroupResponse) => any;
