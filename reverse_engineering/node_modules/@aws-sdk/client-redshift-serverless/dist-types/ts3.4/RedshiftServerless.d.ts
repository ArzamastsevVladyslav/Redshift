import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
import { ConvertRecoveryPointToSnapshotCommandInput, ConvertRecoveryPointToSnapshotCommandOutput } from "./commands/ConvertRecoveryPointToSnapshotCommand";
import { CreateEndpointAccessCommandInput, CreateEndpointAccessCommandOutput } from "./commands/CreateEndpointAccessCommand";
import { CreateNamespaceCommandInput, CreateNamespaceCommandOutput } from "./commands/CreateNamespaceCommand";
import { CreateSnapshotCommandInput, CreateSnapshotCommandOutput } from "./commands/CreateSnapshotCommand";
import { CreateUsageLimitCommandInput, CreateUsageLimitCommandOutput } from "./commands/CreateUsageLimitCommand";
import { CreateWorkgroupCommandInput, CreateWorkgroupCommandOutput } from "./commands/CreateWorkgroupCommand";
import { DeleteEndpointAccessCommandInput, DeleteEndpointAccessCommandOutput } from "./commands/DeleteEndpointAccessCommand";
import { DeleteNamespaceCommandInput, DeleteNamespaceCommandOutput } from "./commands/DeleteNamespaceCommand";
import { DeleteResourcePolicyCommandInput, DeleteResourcePolicyCommandOutput } from "./commands/DeleteResourcePolicyCommand";
import { DeleteSnapshotCommandInput, DeleteSnapshotCommandOutput } from "./commands/DeleteSnapshotCommand";
import { DeleteUsageLimitCommandInput, DeleteUsageLimitCommandOutput } from "./commands/DeleteUsageLimitCommand";
import { DeleteWorkgroupCommandInput, DeleteWorkgroupCommandOutput } from "./commands/DeleteWorkgroupCommand";
import { GetCredentialsCommandInput, GetCredentialsCommandOutput } from "./commands/GetCredentialsCommand";
import { GetEndpointAccessCommandInput, GetEndpointAccessCommandOutput } from "./commands/GetEndpointAccessCommand";
import { GetNamespaceCommandInput, GetNamespaceCommandOutput } from "./commands/GetNamespaceCommand";
import { GetRecoveryPointCommandInput, GetRecoveryPointCommandOutput } from "./commands/GetRecoveryPointCommand";
import { GetResourcePolicyCommandInput, GetResourcePolicyCommandOutput } from "./commands/GetResourcePolicyCommand";
import { GetSnapshotCommandInput, GetSnapshotCommandOutput } from "./commands/GetSnapshotCommand";
import { GetUsageLimitCommandInput, GetUsageLimitCommandOutput } from "./commands/GetUsageLimitCommand";
import { GetWorkgroupCommandInput, GetWorkgroupCommandOutput } from "./commands/GetWorkgroupCommand";
import { ListEndpointAccessCommandInput, ListEndpointAccessCommandOutput } from "./commands/ListEndpointAccessCommand";
import { ListNamespacesCommandInput, ListNamespacesCommandOutput } from "./commands/ListNamespacesCommand";
import { ListRecoveryPointsCommandInput, ListRecoveryPointsCommandOutput } from "./commands/ListRecoveryPointsCommand";
import { ListSnapshotsCommandInput, ListSnapshotsCommandOutput } from "./commands/ListSnapshotsCommand";
import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "./commands/ListTagsForResourceCommand";
import { ListUsageLimitsCommandInput, ListUsageLimitsCommandOutput } from "./commands/ListUsageLimitsCommand";
import { ListWorkgroupsCommandInput, ListWorkgroupsCommandOutput } from "./commands/ListWorkgroupsCommand";
import { PutResourcePolicyCommandInput, PutResourcePolicyCommandOutput } from "./commands/PutResourcePolicyCommand";
import { RestoreFromRecoveryPointCommandInput, RestoreFromRecoveryPointCommandOutput } from "./commands/RestoreFromRecoveryPointCommand";
import { RestoreFromSnapshotCommandInput, RestoreFromSnapshotCommandOutput } from "./commands/RestoreFromSnapshotCommand";
import { TagResourceCommandInput, TagResourceCommandOutput } from "./commands/TagResourceCommand";
import { UntagResourceCommandInput, UntagResourceCommandOutput } from "./commands/UntagResourceCommand";
import { UpdateEndpointAccessCommandInput, UpdateEndpointAccessCommandOutput } from "./commands/UpdateEndpointAccessCommand";
import { UpdateNamespaceCommandInput, UpdateNamespaceCommandOutput } from "./commands/UpdateNamespaceCommand";
import { UpdateSnapshotCommandInput, UpdateSnapshotCommandOutput } from "./commands/UpdateSnapshotCommand";
import { UpdateUsageLimitCommandInput, UpdateUsageLimitCommandOutput } from "./commands/UpdateUsageLimitCommand";
import { UpdateWorkgroupCommandInput, UpdateWorkgroupCommandOutput } from "./commands/UpdateWorkgroupCommand";
import { RedshiftServerlessClient } from "./RedshiftServerlessClient";

export declare class RedshiftServerless extends RedshiftServerlessClient {
    
    convertRecoveryPointToSnapshot(args: ConvertRecoveryPointToSnapshotCommandInput, options?: __HttpHandlerOptions): Promise<ConvertRecoveryPointToSnapshotCommandOutput>;
    convertRecoveryPointToSnapshot(args: ConvertRecoveryPointToSnapshotCommandInput, cb: (err: any, data?: ConvertRecoveryPointToSnapshotCommandOutput) => void): void;
    convertRecoveryPointToSnapshot(args: ConvertRecoveryPointToSnapshotCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ConvertRecoveryPointToSnapshotCommandOutput) => void): void;
    
    createEndpointAccess(args: CreateEndpointAccessCommandInput, options?: __HttpHandlerOptions): Promise<CreateEndpointAccessCommandOutput>;
    createEndpointAccess(args: CreateEndpointAccessCommandInput, cb: (err: any, data?: CreateEndpointAccessCommandOutput) => void): void;
    createEndpointAccess(args: CreateEndpointAccessCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateEndpointAccessCommandOutput) => void): void;
    
    createNamespace(args: CreateNamespaceCommandInput, options?: __HttpHandlerOptions): Promise<CreateNamespaceCommandOutput>;
    createNamespace(args: CreateNamespaceCommandInput, cb: (err: any, data?: CreateNamespaceCommandOutput) => void): void;
    createNamespace(args: CreateNamespaceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateNamespaceCommandOutput) => void): void;
    
    createSnapshot(args: CreateSnapshotCommandInput, options?: __HttpHandlerOptions): Promise<CreateSnapshotCommandOutput>;
    createSnapshot(args: CreateSnapshotCommandInput, cb: (err: any, data?: CreateSnapshotCommandOutput) => void): void;
    createSnapshot(args: CreateSnapshotCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateSnapshotCommandOutput) => void): void;
    
    createUsageLimit(args: CreateUsageLimitCommandInput, options?: __HttpHandlerOptions): Promise<CreateUsageLimitCommandOutput>;
    createUsageLimit(args: CreateUsageLimitCommandInput, cb: (err: any, data?: CreateUsageLimitCommandOutput) => void): void;
    createUsageLimit(args: CreateUsageLimitCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateUsageLimitCommandOutput) => void): void;
    
    createWorkgroup(args: CreateWorkgroupCommandInput, options?: __HttpHandlerOptions): Promise<CreateWorkgroupCommandOutput>;
    createWorkgroup(args: CreateWorkgroupCommandInput, cb: (err: any, data?: CreateWorkgroupCommandOutput) => void): void;
    createWorkgroup(args: CreateWorkgroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateWorkgroupCommandOutput) => void): void;
    
    deleteEndpointAccess(args: DeleteEndpointAccessCommandInput, options?: __HttpHandlerOptions): Promise<DeleteEndpointAccessCommandOutput>;
    deleteEndpointAccess(args: DeleteEndpointAccessCommandInput, cb: (err: any, data?: DeleteEndpointAccessCommandOutput) => void): void;
    deleteEndpointAccess(args: DeleteEndpointAccessCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteEndpointAccessCommandOutput) => void): void;
    
    deleteNamespace(args: DeleteNamespaceCommandInput, options?: __HttpHandlerOptions): Promise<DeleteNamespaceCommandOutput>;
    deleteNamespace(args: DeleteNamespaceCommandInput, cb: (err: any, data?: DeleteNamespaceCommandOutput) => void): void;
    deleteNamespace(args: DeleteNamespaceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteNamespaceCommandOutput) => void): void;
    
    deleteResourcePolicy(args: DeleteResourcePolicyCommandInput, options?: __HttpHandlerOptions): Promise<DeleteResourcePolicyCommandOutput>;
    deleteResourcePolicy(args: DeleteResourcePolicyCommandInput, cb: (err: any, data?: DeleteResourcePolicyCommandOutput) => void): void;
    deleteResourcePolicy(args: DeleteResourcePolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteResourcePolicyCommandOutput) => void): void;
    
    deleteSnapshot(args: DeleteSnapshotCommandInput, options?: __HttpHandlerOptions): Promise<DeleteSnapshotCommandOutput>;
    deleteSnapshot(args: DeleteSnapshotCommandInput, cb: (err: any, data?: DeleteSnapshotCommandOutput) => void): void;
    deleteSnapshot(args: DeleteSnapshotCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteSnapshotCommandOutput) => void): void;
    
    deleteUsageLimit(args: DeleteUsageLimitCommandInput, options?: __HttpHandlerOptions): Promise<DeleteUsageLimitCommandOutput>;
    deleteUsageLimit(args: DeleteUsageLimitCommandInput, cb: (err: any, data?: DeleteUsageLimitCommandOutput) => void): void;
    deleteUsageLimit(args: DeleteUsageLimitCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteUsageLimitCommandOutput) => void): void;
    
    deleteWorkgroup(args: DeleteWorkgroupCommandInput, options?: __HttpHandlerOptions): Promise<DeleteWorkgroupCommandOutput>;
    deleteWorkgroup(args: DeleteWorkgroupCommandInput, cb: (err: any, data?: DeleteWorkgroupCommandOutput) => void): void;
    deleteWorkgroup(args: DeleteWorkgroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteWorkgroupCommandOutput) => void): void;
    
    getCredentials(args: GetCredentialsCommandInput, options?: __HttpHandlerOptions): Promise<GetCredentialsCommandOutput>;
    getCredentials(args: GetCredentialsCommandInput, cb: (err: any, data?: GetCredentialsCommandOutput) => void): void;
    getCredentials(args: GetCredentialsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetCredentialsCommandOutput) => void): void;
    
    getEndpointAccess(args: GetEndpointAccessCommandInput, options?: __HttpHandlerOptions): Promise<GetEndpointAccessCommandOutput>;
    getEndpointAccess(args: GetEndpointAccessCommandInput, cb: (err: any, data?: GetEndpointAccessCommandOutput) => void): void;
    getEndpointAccess(args: GetEndpointAccessCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetEndpointAccessCommandOutput) => void): void;
    
    getNamespace(args: GetNamespaceCommandInput, options?: __HttpHandlerOptions): Promise<GetNamespaceCommandOutput>;
    getNamespace(args: GetNamespaceCommandInput, cb: (err: any, data?: GetNamespaceCommandOutput) => void): void;
    getNamespace(args: GetNamespaceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetNamespaceCommandOutput) => void): void;
    
    getRecoveryPoint(args: GetRecoveryPointCommandInput, options?: __HttpHandlerOptions): Promise<GetRecoveryPointCommandOutput>;
    getRecoveryPoint(args: GetRecoveryPointCommandInput, cb: (err: any, data?: GetRecoveryPointCommandOutput) => void): void;
    getRecoveryPoint(args: GetRecoveryPointCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetRecoveryPointCommandOutput) => void): void;
    
    getResourcePolicy(args: GetResourcePolicyCommandInput, options?: __HttpHandlerOptions): Promise<GetResourcePolicyCommandOutput>;
    getResourcePolicy(args: GetResourcePolicyCommandInput, cb: (err: any, data?: GetResourcePolicyCommandOutput) => void): void;
    getResourcePolicy(args: GetResourcePolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetResourcePolicyCommandOutput) => void): void;
    
    getSnapshot(args: GetSnapshotCommandInput, options?: __HttpHandlerOptions): Promise<GetSnapshotCommandOutput>;
    getSnapshot(args: GetSnapshotCommandInput, cb: (err: any, data?: GetSnapshotCommandOutput) => void): void;
    getSnapshot(args: GetSnapshotCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetSnapshotCommandOutput) => void): void;
    
    getUsageLimit(args: GetUsageLimitCommandInput, options?: __HttpHandlerOptions): Promise<GetUsageLimitCommandOutput>;
    getUsageLimit(args: GetUsageLimitCommandInput, cb: (err: any, data?: GetUsageLimitCommandOutput) => void): void;
    getUsageLimit(args: GetUsageLimitCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetUsageLimitCommandOutput) => void): void;
    
    getWorkgroup(args: GetWorkgroupCommandInput, options?: __HttpHandlerOptions): Promise<GetWorkgroupCommandOutput>;
    getWorkgroup(args: GetWorkgroupCommandInput, cb: (err: any, data?: GetWorkgroupCommandOutput) => void): void;
    getWorkgroup(args: GetWorkgroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetWorkgroupCommandOutput) => void): void;
    
    listEndpointAccess(args: ListEndpointAccessCommandInput, options?: __HttpHandlerOptions): Promise<ListEndpointAccessCommandOutput>;
    listEndpointAccess(args: ListEndpointAccessCommandInput, cb: (err: any, data?: ListEndpointAccessCommandOutput) => void): void;
    listEndpointAccess(args: ListEndpointAccessCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListEndpointAccessCommandOutput) => void): void;
    
    listNamespaces(args: ListNamespacesCommandInput, options?: __HttpHandlerOptions): Promise<ListNamespacesCommandOutput>;
    listNamespaces(args: ListNamespacesCommandInput, cb: (err: any, data?: ListNamespacesCommandOutput) => void): void;
    listNamespaces(args: ListNamespacesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListNamespacesCommandOutput) => void): void;
    
    listRecoveryPoints(args: ListRecoveryPointsCommandInput, options?: __HttpHandlerOptions): Promise<ListRecoveryPointsCommandOutput>;
    listRecoveryPoints(args: ListRecoveryPointsCommandInput, cb: (err: any, data?: ListRecoveryPointsCommandOutput) => void): void;
    listRecoveryPoints(args: ListRecoveryPointsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListRecoveryPointsCommandOutput) => void): void;
    
    listSnapshots(args: ListSnapshotsCommandInput, options?: __HttpHandlerOptions): Promise<ListSnapshotsCommandOutput>;
    listSnapshots(args: ListSnapshotsCommandInput, cb: (err: any, data?: ListSnapshotsCommandOutput) => void): void;
    listSnapshots(args: ListSnapshotsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListSnapshotsCommandOutput) => void): void;
    
    listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
    listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
    listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
    
    listUsageLimits(args: ListUsageLimitsCommandInput, options?: __HttpHandlerOptions): Promise<ListUsageLimitsCommandOutput>;
    listUsageLimits(args: ListUsageLimitsCommandInput, cb: (err: any, data?: ListUsageLimitsCommandOutput) => void): void;
    listUsageLimits(args: ListUsageLimitsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListUsageLimitsCommandOutput) => void): void;
    
    listWorkgroups(args: ListWorkgroupsCommandInput, options?: __HttpHandlerOptions): Promise<ListWorkgroupsCommandOutput>;
    listWorkgroups(args: ListWorkgroupsCommandInput, cb: (err: any, data?: ListWorkgroupsCommandOutput) => void): void;
    listWorkgroups(args: ListWorkgroupsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListWorkgroupsCommandOutput) => void): void;
    
    putResourcePolicy(args: PutResourcePolicyCommandInput, options?: __HttpHandlerOptions): Promise<PutResourcePolicyCommandOutput>;
    putResourcePolicy(args: PutResourcePolicyCommandInput, cb: (err: any, data?: PutResourcePolicyCommandOutput) => void): void;
    putResourcePolicy(args: PutResourcePolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutResourcePolicyCommandOutput) => void): void;
    
    restoreFromRecoveryPoint(args: RestoreFromRecoveryPointCommandInput, options?: __HttpHandlerOptions): Promise<RestoreFromRecoveryPointCommandOutput>;
    restoreFromRecoveryPoint(args: RestoreFromRecoveryPointCommandInput, cb: (err: any, data?: RestoreFromRecoveryPointCommandOutput) => void): void;
    restoreFromRecoveryPoint(args: RestoreFromRecoveryPointCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RestoreFromRecoveryPointCommandOutput) => void): void;
    
    restoreFromSnapshot(args: RestoreFromSnapshotCommandInput, options?: __HttpHandlerOptions): Promise<RestoreFromSnapshotCommandOutput>;
    restoreFromSnapshot(args: RestoreFromSnapshotCommandInput, cb: (err: any, data?: RestoreFromSnapshotCommandOutput) => void): void;
    restoreFromSnapshot(args: RestoreFromSnapshotCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RestoreFromSnapshotCommandOutput) => void): void;
    
    tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
    tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
    tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
    
    untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
    untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
    untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
    
    updateEndpointAccess(args: UpdateEndpointAccessCommandInput, options?: __HttpHandlerOptions): Promise<UpdateEndpointAccessCommandOutput>;
    updateEndpointAccess(args: UpdateEndpointAccessCommandInput, cb: (err: any, data?: UpdateEndpointAccessCommandOutput) => void): void;
    updateEndpointAccess(args: UpdateEndpointAccessCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateEndpointAccessCommandOutput) => void): void;
    
    updateNamespace(args: UpdateNamespaceCommandInput, options?: __HttpHandlerOptions): Promise<UpdateNamespaceCommandOutput>;
    updateNamespace(args: UpdateNamespaceCommandInput, cb: (err: any, data?: UpdateNamespaceCommandOutput) => void): void;
    updateNamespace(args: UpdateNamespaceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateNamespaceCommandOutput) => void): void;
    
    updateSnapshot(args: UpdateSnapshotCommandInput, options?: __HttpHandlerOptions): Promise<UpdateSnapshotCommandOutput>;
    updateSnapshot(args: UpdateSnapshotCommandInput, cb: (err: any, data?: UpdateSnapshotCommandOutput) => void): void;
    updateSnapshot(args: UpdateSnapshotCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateSnapshotCommandOutput) => void): void;
    
    updateUsageLimit(args: UpdateUsageLimitCommandInput, options?: __HttpHandlerOptions): Promise<UpdateUsageLimitCommandOutput>;
    updateUsageLimit(args: UpdateUsageLimitCommandInput, cb: (err: any, data?: UpdateUsageLimitCommandOutput) => void): void;
    updateUsageLimit(args: UpdateUsageLimitCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateUsageLimitCommandOutput) => void): void;
    
    updateWorkgroup(args: UpdateWorkgroupCommandInput, options?: __HttpHandlerOptions): Promise<UpdateWorkgroupCommandOutput>;
    updateWorkgroup(args: UpdateWorkgroupCommandInput, cb: (err: any, data?: UpdateWorkgroupCommandOutput) => void): void;
    updateWorkgroup(args: UpdateWorkgroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateWorkgroupCommandOutput) => void): void;
}
