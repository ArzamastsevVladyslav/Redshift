import { RedshiftClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../RedshiftClient";
import { DeleteClusterSnapshotMessage, DeleteClusterSnapshotResult } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type DeleteClusterSnapshotCommandInput = DeleteClusterSnapshotMessage;
export declare type DeleteClusterSnapshotCommandOutput = DeleteClusterSnapshotResult & __MetadataBearer;
/**
 * <p>Deletes the specified manual snapshot. The snapshot must be in the
 *                 <code>available</code> state, with no other users authorized to access the snapshot. </p>
 *         <p>Unlike automated snapshots, manual snapshots are retained even after you delete
 *             your cluster. Amazon Redshift does not delete your manual snapshots. You must delete manual
 *             snapshot explicitly to avoid getting charged. If other accounts are authorized to access
 *             the snapshot, you must revoke all of the authorizations before you can delete the
 *             snapshot.</p>
 */
export declare class DeleteClusterSnapshotCommand extends $Command<DeleteClusterSnapshotCommandInput, DeleteClusterSnapshotCommandOutput, RedshiftClientResolvedConfig> {
    readonly input: DeleteClusterSnapshotCommandInput;
    private resolved;
    constructor(input: DeleteClusterSnapshotCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RedshiftClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteClusterSnapshotCommandInput, DeleteClusterSnapshotCommandOutput>;
    private serialize;
    private deserialize;
}
