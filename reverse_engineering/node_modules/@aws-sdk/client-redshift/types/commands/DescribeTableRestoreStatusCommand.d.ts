import { RedshiftClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../RedshiftClient";
import { DescribeTableRestoreStatusMessage, TableRestoreStatusMessage } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type DescribeTableRestoreStatusCommandInput = DescribeTableRestoreStatusMessage;
export declare type DescribeTableRestoreStatusCommandOutput = TableRestoreStatusMessage & __MetadataBearer;
/**
 * <p>Lists the status of one or more table restore requests made using the <a>RestoreTableFromClusterSnapshot</a> API action. If you don't specify a value
 *             for the <code>TableRestoreRequestId</code> parameter, then
 *                 <code>DescribeTableRestoreStatus</code> returns the status of all table restore
 *             requests ordered by the date and time of the request in ascending order. Otherwise
 *                 <code>DescribeTableRestoreStatus</code> returns the status of the table specified by
 *                 <code>TableRestoreRequestId</code>.</p>
 */
export declare class DescribeTableRestoreStatusCommand extends $Command<DescribeTableRestoreStatusCommandInput, DescribeTableRestoreStatusCommandOutput, RedshiftClientResolvedConfig> {
    readonly input: DescribeTableRestoreStatusCommandInput;
    private resolved;
    constructor(input: DescribeTableRestoreStatusCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RedshiftClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeTableRestoreStatusCommandInput, DescribeTableRestoreStatusCommandOutput>;
    private serialize;
    private deserialize;
}
