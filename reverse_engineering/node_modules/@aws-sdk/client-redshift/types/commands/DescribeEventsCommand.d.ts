import { RedshiftClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../RedshiftClient";
import { DescribeEventsMessage, EventsMessage } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type DescribeEventsCommandInput = DescribeEventsMessage;
export declare type DescribeEventsCommandOutput = EventsMessage & __MetadataBearer;
/**
 * <p>Returns events related to clusters, security groups, snapshots, and parameter
 *             groups for the past 14 days. Events specific to a particular cluster, security group,
 *             snapshot or parameter group can be obtained by providing the name as a parameter. By
 *             default, the past hour of events are returned.</p>
 */
export declare class DescribeEventsCommand extends $Command<DescribeEventsCommandInput, DescribeEventsCommandOutput, RedshiftClientResolvedConfig> {
    readonly input: DescribeEventsCommandInput;
    private resolved;
    constructor(input: DescribeEventsCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RedshiftClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeEventsCommandInput, DescribeEventsCommandOutput>;
    private serialize;
    private deserialize;
}
