import { RedshiftClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../RedshiftClient";
import { DisableSnapshotCopyMessage, DisableSnapshotCopyResult } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type DisableSnapshotCopyCommandInput = DisableSnapshotCopyMessage;
export declare type DisableSnapshotCopyCommandOutput = DisableSnapshotCopyResult & __MetadataBearer;
/**
 * <p>Disables the automatic copying of snapshots from one region to another region for a
 *             specified cluster.</p>
 *         <p>If your cluster and its snapshots are encrypted using a customer master key (CMK)
 *             from AWS KMS, use <a>DeleteSnapshotCopyGrant</a> to delete the grant that
 *             grants Amazon Redshift permission to the CMK in the destination region. </p>
 */
export declare class DisableSnapshotCopyCommand extends $Command<DisableSnapshotCopyCommandInput, DisableSnapshotCopyCommandOutput, RedshiftClientResolvedConfig> {
    readonly input: DisableSnapshotCopyCommandInput;
    private resolved;
    constructor(input: DisableSnapshotCopyCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RedshiftClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisableSnapshotCopyCommandInput, DisableSnapshotCopyCommandOutput>;
    private serialize;
    private deserialize;
}
