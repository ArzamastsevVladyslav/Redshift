import { RedshiftClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../RedshiftClient";
import { DescribeResizeMessage, ResizeProgressMessage } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type DescribeResizeCommandInput = DescribeResizeMessage;
export declare type DescribeResizeCommandOutput = ResizeProgressMessage & __MetadataBearer;
/**
 * <p>Returns information about the last resize operation for the specified cluster. If
 *             no resize operation has ever been initiated for the specified cluster, a <code>HTTP
 *                 404</code> error is returned. If a resize operation was initiated and completed, the
 *             status of the resize remains as <code>SUCCEEDED</code> until the next resize. </p>
 *         <p>A resize operation can be requested using <a>ModifyCluster</a> and
 *             specifying a different number or type of nodes for the cluster. </p>
 */
export declare class DescribeResizeCommand extends $Command<DescribeResizeCommandInput, DescribeResizeCommandOutput, RedshiftClientResolvedConfig> {
    readonly input: DescribeResizeCommandInput;
    private resolved;
    constructor(input: DescribeResizeCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RedshiftClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeResizeCommandInput, DescribeResizeCommandOutput>;
    private serialize;
    private deserialize;
}
